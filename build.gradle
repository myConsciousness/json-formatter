 /*
 * Copyright 2020 Kato Shinya.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */

plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
    id 'com.palantir.git-version' version '0.12.2'
}

publishing {
   publications {
        group 'org.thinkit.formatter'
        version = gitVersion()

        gpr(MavenPublication) {
            from(components.java)
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/myConsciousness/json-formatter")
            credentials {
                username = System.getenv("GITHUB_USER")
                password = System.getenv("GITHUB_PUBLISH_TOKEN")
            }
        }
    }
}

repositories {
    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/myConsciousness/dev-utils")
        credentials {
            username = System.getenv("GITHUB_USER")
            password = System.getenv("GITHUB_DOWNLOAD_PACKAGE_TOKEN")
        }
    }

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/myConsciousness/formatter-commons")
        credentials {
            username = System.getenv("GITHUB_USER")
            password = System.getenv("GITHUB_DOWNLOAD_PACKAGE_TOKEN")
        }
    }

    maven {
        name = "GitHubPackages"
        url = uri("https://maven.pkg.github.com/myConsciousness/content-framework")
        credentials {
            username = System.getenv("GITHUB_USER")
            password = System.getenv("GITHUB_DOWNLOAD_PACKAGE_TOKEN")
        }
    }

    jcenter()
}

dependencies {
    implementation 'com.google.guava:guava:29.0-jre'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.6.2'

    compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'

    implementation 'org.thinkit.common:dev-utils:v1.0.0'
    implementation 'org.thinkit.formatter.common:formatter-commons:v1.0.0-2-g5f99bb5'
    implementation 'org.thinkit.framework.content:content-framework:1.0-SNAPSHOT'
}

application {
    mainClassName = 'org.thinkit.formatter.EntryJsonFormatter'
}

run {
    if (project.hasProperty('json')) {
        args project.json
    } else {
        args "   　　　 {\"metadata\":{\"author\":\"Kato Shinya\",\"since\": \"1.0\",\"version\": \"1.0\",\"creationDate\": \"2020/06/24\",\"encoding\": \"UTF-8\",\"description\": \"test\"},\"selectionNodes\": [{\"node\": {\"conditionId\": \"0\",\"test1\": \"test\",\"test2\": \"test\"}},{\"node\": {\"conditionId\": \"1\",\"test1\": \"test\",\"test2\": \"test\"}},{\"node\": {\"conditionId\": \"2\",\"test1\": \"test\",\"test2\": \"test\"}}],\"conditionNodes\": [{\"node\": {\"conditionId\": \"0\",\"exclude\": false,\"conditions\": [{\"keyName\": \"test\",\"operand\": \"=\",\"value\": \"0\"}]}},{\"node\": {\"conditionId\": \"1\",\"exclude\": false,\"conditions\": [{\"keyName\": \"test\",\"operand\": \"=\",\"value\": \"1\"}]}},{\"node\": {\"conditionId\": \"2\",\"exclude\": false,\"conditions\": [{\"keyName\": \"test\",\"operand\": \"=\",\"value\": \"2\"}]}}]}"
    }

    if (project.hasProperty('indent')) {
        args project.indentFactor
    } else {
        args "-1"
    }
}

test {
    // Use junit platform for unit tests
    useJUnitPlatform()
}
